//################################################
//<TexMng.cpp>
// テクスチャ管理
//------------------------------------------------
//テクスチャマネージャ作成
//2012/06/27 ~
//						SekiyamaRumi
//################################################

//================================================
//インクルードヘッダ
//================================================
#include "texmng.h"

//================================================
//グローバル変数
//================================================
TEX_MNG g_TexMng;

//+++++++++++++++++++++++++++++++++++++++++++++++++
//コンストラクタ
//-------------------------------------------------
//
//--in---------------------------------------------
//なし
//--out--------------------------------------------
//なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
TEX_MNG::TEX_MNG()
{
	// すべてまっさらにする
	for(int nLoop = 0; nLoop < MAX_TEX; nLoop++)
	{
		m_pTex[nLoop] = NULL;
		lstrcpy(m_FileName[nLoop], _T(""));
		lstrcpy(m_Category[nLoop], _T(""));
	}
}

//+++++++++++++++++++++++++++++++++++++++++++++++++
//デストラクタ
//-------------------------------------------------
//
//--in---------------------------------------------
//なし
//--out--------------------------------------------
//なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
TEX_MNG::~TEX_MNG()
{
	ReleaseAll();
}

//+++++++++++++++++++++++++++++++++++++++++++++++++
//テクスチャポインタの取得
//-------------------------------------------------
//
//--in---------------------------------------------
// ファイル名
// カテゴリ名
//--out--------------------------------------------
// テクスチャポインタ
//+++++++++++++++++++++++++++++++++++++++++++++++++
GLuint TEX_MNG::GetTexture(char *pszFName, char *cat)
{
	//同じファイル名のものがあったらそのポインタを返す
	for(int nLoop = 0; nLoop < MAX_TEX; nLoop++)
	{
		if(m_pTex[nLoop] && lstrcmp(m_FileName[nLoop], pszFName) == 0)
			return m_pTex[nLoop];
	}

	//同じモノがなければあいてる場所を探す
	int nID;
	for(nID = 0; nID < MAX_TEX; nID++)
	{
		if(!m_pTex[nID])
			break;
	}

	//空きがなかったらNULL返却
	if(nID == MAX_TEX)
		return NULL;

	//新規読み込みする 
	lstrcpy(m_FileName[nID], pszFName);
	lstrcpy(m_Category[nID], cat);		// カテゴリ登録
	if(strstr(pszFName, ".png") != NULL)
	{
		pngInfo info;
		m_pTex[nID] = pngBind(pszFName, PNG_NOMIPMAP, PNG_ALPHA, &info, GL_CLAMP, GL_NEAREST, GL_LINEAR);
	}
	else
		m_pTex[nID] = LoadTexture(m_FileName[nID]);

	return m_pTex[nID];
}

//+++++++++++++++++++++++++++++++++++++++++++++++++
//全テクスチャの破棄
//-------------------------------------------------
//
//--in---------------------------------------------
//なし
//--out--------------------------------------------
//なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void TEX_MNG::ReleaseAll()
{
	// すべてまっさらにする
	for(int nLoop = 0; nLoop < MAX_TEX; nLoop++)
	{
		ReleaseTexture(m_pTex[nLoop]);
		lstrcpy(m_FileName[nLoop], _T(""));
		lstrcpy(m_Category[nLoop], _T(""));
	}
}

//+++++++++++++++++++++++++++++++++++++++++++++++++
//カテゴリテクスチャの破棄
//-------------------------------------------------
//
//--in---------------------------------------------
//カテゴリ名
//--out--------------------------------------------
//なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void TEX_MNG::ReleaseCat(TCHAR* cat)
{
	// 該当カテゴリをまっさらにする
	for(int nLoop = 0; nLoop < MAX_TEX; nLoop++)
	{
		if(lstrcmp(m_Category[nLoop], cat) == 0)
		{
			ReleaseTexture(m_pTex[nLoop]);
			lstrcpy(m_FileName[nLoop], _T(""));
			lstrcpy(m_Category[nLoop], _T(""));
		}
	}
}

