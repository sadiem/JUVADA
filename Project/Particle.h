//################################################
// <Particle.h>
//		パーティクルクラス
//------------------------------------------------
// 2013/1/15
//						Akihito Tanaka
//################################################
#ifndef _____PARTICLE_H_____
#define _____PARTICLE_H_____
//================================================
//インクルードヘッダ
//================================================
#include "include.h"
#include "Common.h"
#include "Matrix.h"			//ベクトル用
//================================================
//ライブラリ定義
//================================================

//================================================
//定数定義
//================================================

enum PARTICLE_TYPE{
	SPIN,
	SPLASH,
	BOMB,
};
//================================================
//構造体定義
//================================================

//================================================
//グローバル変数
//================================================

//================================================
//プロトタイプ宣言
//================================================
class PARTICLE
{
public:
	PARTICLE();
	~PARTICLE();
private:
	GLuint	m_TexID;			//テクスチャID
	float	m_Dst;				//中心からの距離
	float	m_Rad;				//角度
	float	m_AddRad;			//角度加算値
	void	MoveSpin(void);		//スピン移動
	void	MoveSplash(void);	//噴射
	void	MoveBomb(void);		//爆発

public:
	VECTOR3 m_Pos;				//表示位置
	VECTOR3 m_Center;			//表示基準位置
	VECTOR3 m_Move;				//移動方向
	float	m_AddDst;			//半径の加算値
	float	m_Alpha;			//アルファ値
	float	m_Scale;
	bool	m_Live;
	int		m_Time;
	int		m_MaxLifeTime;
	int		m_Type;
	void Init(void);			//初期化
	void Reset(void);			//リセット
	void UpDate(void);			//更新
	bool Set(VECTOR3 pos, int type);	//発生位置のセット
	void Draw(void);			//描画
	
};

//################################################
// End of File
//################################################
#endif _____PARTICLE_H_____
