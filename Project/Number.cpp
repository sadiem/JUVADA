//################################################
//<Number.cpp>
// 数字一文字を出力する
//------------------------------------------------
//2012/06/11 ~
//2013/01/31  修正
//						SekiyamaRumi
//################################################
//================================================
//インクルードヘッダ
//================================================
#include "Number.h"

//+++++++++++++++++++++++++++++++++++++++++++++++++
// コンストラクタ
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
NUMBER::NUMBER()
{
	//ポリゴンデータの生成
	for(int i=0; i<4; i++)
	{
		m_Ver[i].tu = 0.0f;
		m_Ver[i].tv = 0.0f;
		m_Ver[i].x  = 0.0f;
		m_Ver[i].y  = 0.0f;
		m_Ver[i].z  = 0.0f;
	}

}
//+++++++++++++++++++++++++++++++++++++++++++++++++
// デストラクタ
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
NUMBER::~NUMBER()
{
}
//+++++++++++++++++++++++++++++++++++++++++++++++++
// 描画
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void NUMBER::Disp(GLuint fID)
{	
	glEnable(GL_TEXTURE_2D);	//テクスチャ有効化
	glBindTexture(GL_TEXTURE_2D, fID);

	glInterleavedArrays(GL_T2F_V3F, 0, m_Ver);
	glDrawArrays(GL_QUADS, 0, 4);
}
//+++++++++++++++++++++++++++++++++++++++++++++++++
// 位置指定
//-------------------------------------------------
// 
//--in---------------------------------------------
// 初期位置　x y
// 桁
// テクスチャ横幅,縦幅
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void NUMBER::SetPos(float x, float y,int nD, float m_num_w, float m_num_h)
{
	//ｘ, y　座標の指定
	m_fPosX = x;
	m_fPosY = y;

	m_Ver[0].x  = m_fPosX + (m_num_w * nD);
	m_Ver[0].y  = m_fPosY;
	m_Ver[0].z  = 0.0f;

	m_Ver[1].x  = m_fPosX + (m_num_w * nD);
	m_Ver[1].y  = m_fPosY + m_num_h;
	m_Ver[1].z  = 0.0f;

	m_Ver[2].x  = m_fPosX + (m_num_w * nD) + m_num_w;
	m_Ver[2].y  = m_fPosY + m_num_h;
	m_Ver[2].z  = 0.0f;

	m_Ver[3].x  = m_fPosX + (m_num_w * nD) + m_num_w;
	m_Ver[3].y  = m_fPosY;
	m_Ver[3].z  = 0.0f;
}
//+++++++++++++++++++++++++++++++++++++++++++++++++
// 表示する数値
//-------------------------------------------------
// １桁分の数値を受け取り、数値にテクスチャを割り当てる
//--in---------------------------------------------
// 数値
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void NUMBER::SetNum(int num)
{
	//数字切り替え
	m_Ver[0].tu = num / 11.0f;
	m_Ver[0].tv = 0.0f;

	m_Ver[1].tu = num / 11.0f;
	m_Ver[1].tv = 1.0f;

	m_Ver[2].tu = num / 11.0f + 0.1f;
	m_Ver[2].tv = 1.0f;

	m_Ver[3].tu = num / 11.0f + 0.1f;
	m_Ver[3].tv = 0.0f;

}