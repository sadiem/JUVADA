//################################################
//<Fade.cpp>
// フェード関連	
//------------------------------------------------
//2013/01/31 ~						SekiyamaRumi
//2013/02/04	スタート画面		Akihito Tanaka
//################################################
//================================================
//インクルード
//================================================
#include "Fade.h"

//================================================
//定数定義
//================================================
//フェード
#define FADE_POS_X (-10)		//フェード板ポリ初期位置
#define FADE_POS_Y (-10)
#define FADE_H (20)				//フェード板ポリ縦幅
#define FADE_W (20)				//　　　　　　　横幅
#define FADE_Z_POS (10)			//フェードのZ軸の位置
//================================================
//構造体
//================================================
//================================================
//クラス定義
//================================================


//+++++++++++++++++++++++++++++++++++++++++++++++++
// コンストラクタ
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
FADE::FADE()
{
	Reset();
}

//+++++++++++++++++++++++++++++++++++++++++++++++++
// デストラクタ
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
FADE::~FADE()
{

}


//+++++++++++++++++++++++++++++++++++++++++++++++++
// リセット
//-------------------------------------------------
// 
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void FADE::Reset()
{
	COLOR col = {0.0f, 0.0f, 0.0f, 1.0f};
	PlySetVer(&pol, FADE_POS_X, FADE_POS_Y, FADE_W, FADE_H);	//位置情報
	PlySetTex(&pol); 	//テクスチャ座標情報
	PlySetCol(&pol, col);	//色情報
}

//++++++++++++++++++++++++++++++++++++++++++++++++
// フレーム数取得
//--in--------------------------------------------
//
//--out-------------------------------------------
// 終了フラグ
//++++++++++++++++++++++++++++++++++++++++++++++++
void FADE::SetFrame(int frame)
{
	m_nFrame = frame;
}
//++++++++++++++++++++++++++++++++++++++++++++++++
// フェードイン　透明→有色
//--in--------------------------------------------
//
//--out-------------------------------------------
// 終了フラグ
//++++++++++++++++++++++++++++++++++++++++++++++++
bool FADE::FadeIn(int time)
{
	static int nCnt = -1;

	//初回時
	if(nCnt < 0){
		nCnt = m_nFrame;	//現在のフレームカウント数を保存
		pol.col.a = 0.0f;
	}

	//α値を上げる
	if((m_nFrame - nCnt) < time)
		pol.col.a += (1.0f / time);
	else{
		pol.col.a = 1.0f;
		nCnt = -1;
		return true;
	}
	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++
// フェードアウト　有色→透明
//--in--------------------------------------------
//
//--out-------------------------------------------
// 終了フラグ
//++++++++++++++++++++++++++++++++++++++++++++++++
bool FADE::FadeOut(int time)
{
	static int nCnt = -1;

	//初回時
	if(nCnt < 0){
		nCnt = m_nFrame;	//現在のフレームカウント数を保存
		pol.col.a = 1.0f;
	}

	//α値を上げる
	if((m_nFrame - nCnt) < time && pol.col.a > 0.05f)
	{
		pol.col.a -= (1.0f / time);
	}
	else{
		pol.col.a = 0.0f;
		nCnt = -1;
		return true;
	}
	return false;
}
//+++++++++++++++++++++++++++++++++++++++++++++++++
// フェードイン
//-------------------------------------------------
// 黒→透明
//--in---------------------------------------------
// なし
//--out--------------------------------------------
// なし
//+++++++++++++++++++++++++++++++++++++++++++++++++
void FADE::Draw()
{
	PlyDrawPoliBillBoard(pol, 0, VECTOR3(0.0f, 0.0f, 0.0f), VECTOR3(0.0f, 0.0f, FADE_Z_POS), m_TexID);
}