//バンプマッピング
//frs…フラグメントシェーダ
uniform sampler2D Tex;
uniform sampler2D TexBump;
uniform float Alpha;
varying vec3 light;
varying vec3 view;
void main(void)
{
  vec4 color = texture2DProj(TexBump, gl_TexCoord[0]);
  vec3 fnormal = vec3(color) * 2.0 - 1.0;
  vec3 flight = normalize(light);
  float diffuse = dot(flight,fnormal);
  vec4 dcolor = texture2DProj(Tex, gl_TexCoord[0]);
  
  gl_FragColor = dcolor * gl_FrontLightProduct[0].ambient;
  
  if(diffuse > 0.0)
  {
     vec3 fview = normalize(view);
     vec3 halfway = normalize(flight - fview);
     float specular = pow(max(dot(fnormal, halfway), 0.0), gl_FrontMaterial.shininess);
     gl_FragColor += dcolor * gl_LightSource[0].diffuse * diffuse + gl_FrontLightProduct[0].specular * specular;

  }
  gl_FragColor.a = Alpha;
}