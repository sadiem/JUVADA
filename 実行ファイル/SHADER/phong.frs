// フォンシェーディング
//frs…フラグメントシェーダ
varying vec3 position;
varying vec3 normal;
uniform sampler2D Tex;
void main(void)
{
  vec4 color = texture2DProj(Tex, gl_TexCoord[0]);
  vec3 fnormal = normalize(normal);
  vec3 light = normalize(gl_LightSource[0].position.xyz - position);
  float diffuse = dot(light,fnormal);
  
  gl_FragColor = color * gl_LightSource[0].ambient;
  if(diffuse > 0.0)
  {
     vec3 view = normalize(position);
     vec3 halfway = normalize(light - view);
     float specular = pow(max(dot(fnormal, halfway), 0.0), gl_FrontMaterial.shininess);
     gl_FragColor += color * gl_LightSource[0].diffuse * diffuse
                    + gl_FrontLightProduct[0].specular * specular;
  }
  
}